syntax = "proto3";
package other_social_by_option;
import "google/protobuf/empty.proto";
import "example_proto_by_option/common/api.proto";


message DemoMessage {
  int32 a = 1;
  string b = 2;
}
message SubSubSubNestedMessage{
  repeated DemoMessage repeated_demo = 1;
}
message SubSubNestedMessage{
  map<string, SubSubSubNestedMessage> map_demo = 1;
}
message SubNestedMessage{
  repeated SubSubNestedMessage repeated_demo = 1;
}

message NestedMessage{
  map<string, SubNestedMessage> map_demo = 1;
}


service Other {
  rpc nested_demo (google.protobuf.Empty) returns (NestedMessage) {
    option (pait.api.http) = {
      post: { url: "/other/nested-demo"},
      response_message: {nested: "/map_demo/${}/repeated_demo/$[]/$.map_demo/${}/repeated_demo"}
    };
  };

}
