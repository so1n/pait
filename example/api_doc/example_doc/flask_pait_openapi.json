{"openapi": "3.0.0", "info": {"title": "Pait Doc", "version": "0.0.1"}, "servers": [{"url": "http://127.0.0.1"}], "tags": [{"name": "test", "description": "test api"}, {"name": "user", "description": "user api"}, {"name": "check resp", "description": "check route response"}, {"name": "check param", "description": "check route request param"}, {"name": "links", "description": "openapi links route"}, {"name": "plugin", "description": "test pait plugin route"}, {"name": "raise", "description": "raise route"}, {"name": "user", "description": "user data route"}, {"name": "post", "description": "post method route"}, {"name": "depend", "description": "depend route"}, {"name": "same alias", "description": "have same alias field route"}, {"name": "field", "description": "field route"}, {"name": "mock", "description": "mock response route"}, {"name": "cbv", "description": "cbv route"}, {"name": "pait_doc", "description": "pait default doc route"}], "paths": {"/openapi.json": {"get": {"tags": ["pait_doc"], "deprecated": false, "summary": "", "description": "", "operationId": "GET.Pait Api Doc(private).openapi_route", "pai_info": {"group": "pait_doc", "status": "undefined", "author": [""], "md5": "88857ea00c8b73edd5bae65e48222d15"}, "parameters": [{"name": "url_dict", "in": "query", "required": true, "description": "Set the template variable, for example, there is a template parameter token, then the requested parameter is template-token=xxx", "schema": {"title": "Url Dict", "description": "Set the template variable, for example, there is a template parameter token, then the requested parameter is template-token=xxx", "type": "object"}}, {"name": "pin_code", "in": "query", "required": false, "description": "", "schema": {"title": "Pin Code", "default": "", "type": "string"}}], "responses": {"200": {"description": "open api json response", "headers": {}, "content": {}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/swagger": {"get": {"tags": ["pait_doc"], "deprecated": false, "summary": "", "description": "", "operationId": "GET.Pait Api Doc(private).get_swagger_ui_html", "pai_info": {"group": "pait_doc", "status": "undefined", "author": [""], "md5": "0487b7342bea76e3aa23ca77fe11deb6"}, "parameters": [{"name": "url_dict", "in": "query", "required": true, "description": "Set the template variable, for example, there is a template parameter token, then the requested parameter is template-token=xxx", "schema": {"title": "Url Dict", "description": "Set the template variable, for example, there is a template parameter token, then the requested parameter is template-token=xxx", "type": "object"}}], "responses": {"200": {"description": "doc html response", "headers": {"X-Example-Type": "html"}, "content": {"text/html": {"type": "string", "example": "<h1>Pait example html</h1>"}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/redoc": {"get": {"tags": ["pait_doc"], "deprecated": false, "summary": "", "description": "", "operationId": "GET.Pait Api Doc(private).get_redoc_html", "pai_info": {"group": "pait_doc", "status": "undefined", "author": [""], "md5": "0487b7342bea76e3aa23ca77fe11deb6"}, "parameters": [{"name": "url_dict", "in": "query", "required": true, "description": "Set the template variable, for example, there is a template parameter token, then the requested parameter is template-token=xxx", "schema": {"title": "Url Dict", "description": "Set the template variable, for example, there is a template parameter token, then the requested parameter is template-token=xxx", "type": "object"}}], "responses": {"200": {"description": "doc html response", "headers": {"X-Example-Type": "html"}, "content": {"text/html": {"type": "string", "example": "<h1>Pait example html</h1>"}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/auto-complete-json-plugin": {"get": {"tags": ["plugin"], "deprecated": false, "summary": "", "description": "Test json plugin by resp type is dict", "operationId": "GET.auto_complete_json_route", "pai_info": {"group": "plugin", "status": "undefined", "author": ["so1n"], "md5": "32b853bdc37bf59f054d2e883fce8cc6"}, "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "email", "in": "query", "required": false, "description": "user email", "schema": {"title": "Email", "description": "user email", "default": "example@xxx.com", "type": "string"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "age", "in": "query", "required": true, "description": "age", "schema": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, {"name": "display_age", "in": "query", "required": false, "description": "display_age", "schema": {"title": "Display Age", "description": "display_age", "default": 0, "type": "integer"}}], "responses": {"200": {"description": "success response", "headers": {}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResponseModel"}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/check-json-plugin-1": {"get": {"tags": ["plugin"], "deprecated": false, "summary": "", "description": "Test json plugin by resp type is typed dict", "operationId": "GET.check_json_plugin_route1", "pai_info": {"group": "plugin", "status": "undefined", "author": ["so1n"], "md5": "32b853bdc37bf59f054d2e883fce8cc6"}, "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "email", "in": "query", "required": false, "description": "user email", "schema": {"title": "Email", "description": "user email", "default": "example@xxx.com", "type": "string"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "age", "in": "query", "required": true, "description": "age", "schema": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, {"name": "display_age", "in": "query", "required": false, "description": "display_age", "schema": {"title": "Display Age", "description": "display_age", "default": 0, "type": "integer"}}], "responses": {"200": {"description": "success response", "headers": {}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/example__param_verify__model__UserSuccessRespModel3__ResponseModel"}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/check-json-plugin": {"get": {"tags": ["plugin"], "deprecated": false, "summary": "", "description": "Test json plugin by resp type is dict", "operationId": "GET.check_json_plugin_route", "pai_info": {"group": "plugin", "status": "undefined", "author": ["so1n"], "md5": "32b853bdc37bf59f054d2e883fce8cc6"}, "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "email", "in": "query", "required": false, "description": "user email", "schema": {"title": "Email", "description": "user email", "default": "example@xxx.com", "type": "string"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "age", "in": "query", "required": true, "description": "age", "schema": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, {"name": "display_age", "in": "query", "required": false, "description": "display_age", "schema": {"title": "Display Age", "description": "display_age", "default": 0, "type": "integer"}}], "responses": {"200": {"description": "success response", "headers": {}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/example__param_verify__model__UserSuccessRespModel3__ResponseModel"}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/pre-depend-contextmanager": {"get": {"tags": ["depend"], "deprecated": false, "summary": "", "description": "", "operationId": "GET.pre_depend_contextmanager_route", "pai_info": {"group": "other", "status": "test", "author": ["so1n"], "md5": "4790f68d8ed78f9693091256c34f7034"}, "parameters": [{"name": "is_raise", "in": "query", "required": false, "description": "", "schema": {"title": "Is Raise", "default": false, "type": "boolean"}}, {"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}], "responses": {"200": {"description": "success response|fail response", "headers": {}, "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/example__param_verify__model__ResponseModel"}, {"$ref": "#/components/schemas/ResponseFailModel"}]}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/depend-contextmanager": {"get": {"tags": ["depend"], "deprecated": false, "summary": "", "description": "", "operationId": "GET.depend_contextmanager_route", "pai_info": {"group": "other", "status": "test", "author": ["so1n"], "md5": "d51a7f67c24374ed32f04e82d39576d7"}, "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "is_raise", "in": "query", "required": false, "description": "", "schema": {"title": "Is Raise", "default": false, "type": "boolean"}}], "responses": {"200": {"description": "success response|fail response", "headers": {}, "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/example__param_verify__model__ResponseModel"}, {"$ref": "#/components/schemas/example__param_verify__model__ResponseFailModel"}]}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/same-alias": {"get": {"tags": ["same alias"], "deprecated": false, "summary": "", "description": "Test different request types, but they have the same alias and different parameter names", "operationId": "GET.same_alias_route", "pai_info": {"group": "other", "status": "release", "author": ["so1n"], "md5": "af515a4527035e007327af120c15f264"}, "parameters": [{"name": "token", "in": "header", "required": false, "description": "", "schema": {"title": "Token", "default": "", "type": "string"}}, {"name": "token", "in": "query", "required": false, "description": "", "schema": {"title": "Token", "default": "", "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "headers": {}, "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/example__param_verify__model__SimpleRespModel__ResponseModel"}, {"$ref": "#/components/schemas/example__param_verify__model__ResponseFailModel"}]}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/pait-model": {"post": {"tags": ["field"], "deprecated": false, "summary": "", "description": "Test pait model", "operationId": "POST.pait_model_route", "pai_info": {"group": "other", "status": "test", "author": ["so1n"], "md5": "7da4bab8b44e5130865541f72b761f81"}, "requestBody": {"content": {"application/json": {"schema": {"title": "PaitModelRouteDynamicModel", "type": "object", "properties": {"user_info": {"$ref": "#/components/schemas/UserInfo"}}, "required": ["user_info"]}}}}, "parameters": [{"name": "user-agent", "in": "header", "required": true, "description": "user agent", "schema": {"title": "User-Agent", "description": "user agent", "type": "string"}}, {"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}], "responses": {"200": {"description": "success response|fail response", "headers": {}, "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/example__param_verify__model__SimpleRespModel__ResponseModel"}, {"$ref": "#/components/schemas/example__param_verify__model__ResponseFailModel"}]}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/raise-tip": {"post": {"tags": ["raise"], "deprecated": true, "summary": "", "description": "test pait raise tip", "operationId": "POST.raise_tip_route", "pai_info": {"group": "other", "status": "abandoned", "author": ["so1n"], "md5": "0743f2064ec718b43ad95608b18d5821"}, "parameters": [{"name": "content__type", "in": "header", "required": true, "description": "Content-Type", "schema": {"title": "Content  Type", "description": "Content-Type", "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "headers": {}, "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/example__param_verify__model__SimpleRespModel__ResponseModel"}, {"$ref": "#/components/schemas/example__param_verify__model__ResponseFailModel"}]}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/depend": {"post": {"tags": ["user", "depend"], "deprecated": false, "summary": "", "description": "Testing depend and using request parameters", "operationId": "POST.depend_route", "pai_info": {"group": "other", "status": "release", "author": ["so1n"], "md5": "9439a51f1d16885e2671f5c6732fd05d"}, "requestBody": {"content": {"application/json": {"schema": {"title": "DependRouteDynamicModel", "type": "object", "properties": {"age": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, "required": ["age"]}}}}, "parameters": [{"name": "user-agent", "in": "header", "required": true, "description": "user agent", "schema": {"title": "User-Agent", "description": "user agent", "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "headers": {}, "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/example__param_verify__model__SimpleRespModel__ResponseModel"}, {"$ref": "#/components/schemas/example__param_verify__model__ResponseFailModel"}]}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/field-default-factory": {"post": {"tags": ["field"], "deprecated": false, "summary": "", "description": "", "operationId": "POST.field_default_factory_route", "pai_info": {"group": "user", "status": "test", "author": ["so1n"], "md5": "5b613f00abeb70621cd07a0dee1fab07"}, "requestBody": {"content": {"application/json": {"schema": {"title": "FieldDefaultFactoryRouteDynamicModel", "type": "object", "properties": {"demo_value": {"title": "Demo Value", "description": "Json body value not empty", "type": "integer"}, "data_list": {"title": "Data List", "description": "test default factory", "type": "array", "items": {"type": "string"}}, "data_dict": {"title": "Data Dict", "description": "test default factory", "type": "object"}}, "required": ["demo_value"]}}}}, "responses": {"200": {"description": "success response|fail response", "headers": {}, "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/example__param_verify__model__SimpleRespModel__ResponseModel"}, {"$ref": "#/components/schemas/example__param_verify__model__ResponseFailModel"}]}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/check-param": {"get": {"tags": ["check param"], "deprecated": false, "summary": "", "description": "Test check param", "operationId": "GET.check_param_route", "pai_info": {"group": "user", "status": "release", "author": ["so1n"], "md5": "07a9234b7b7a4c498781c7b3b88a6cde"}, "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "email", "in": "query", "required": false, "description": "user email", "schema": {"title": "Email", "description": "user email", "default": "example@xxx.com", "type": "string"}}, {"name": "user_name", "in": "query", "required": false, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "alias_user_name", "in": "query", "required": false, "description": "user name", "schema": {"title": "Alias User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "age", "in": "query", "required": true, "description": "age", "schema": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, {"name": "birthday", "in": "query", "required": false, "description": "birthday", "schema": {"title": "Birthday", "description": "birthday", "type": "string"}}, {"name": "sex", "in": "query", "required": false, "description": "sex", "schema": {"title": "SexEnum", "description": "An enumeration.", "enum": ["man", "woman"], "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "headers": {}, "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/example__param_verify__model__SimpleRespModel__ResponseModel"}, {"$ref": "#/components/schemas/example__param_verify__model__ResponseFailModel"}]}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/check-resp": {"get": {"tags": ["check resp"], "deprecated": false, "summary": "", "description": "Test test-helper check response", "operationId": "GET.check_response_route", "pai_info": {"group": "user", "status": "release", "author": ["so1n"], "md5": "32b853bdc37bf59f054d2e883fce8cc6"}, "parameters": [{"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "email", "in": "query", "required": false, "description": "user email", "schema": {"title": "Email", "description": "user email", "default": "example@xxx.com", "type": "string"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "age", "in": "query", "required": true, "description": "age", "schema": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, {"name": "display_age", "in": "query", "required": false, "description": "display_age", "schema": {"title": "Display Age", "description": "display_age", "default": 0, "type": "integer"}}], "responses": {"200": {"description": "success response|fail response", "headers": {}, "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/example__param_verify__model__UserSuccessRespModel3__ResponseModel"}, {"$ref": "#/components/schemas/example__param_verify__model__ResponseFailModel"}]}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/post": {"post": {"tags": ["user", "post"], "deprecated": false, "summary": "", "description": "Test Method:Post Pydantic Model", "operationId": "POST.post_route", "pai_info": {"group": "user", "status": "release", "author": ["so1n"], "md5": "f6cd1aecda9188e47d51e456b1a8293b"}, "requestBody": {"content": {"application/json": {"schema": {"title": "PostRouteDynamicModel", "type": "object", "properties": {"uid": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "example": "123", "type": "integer"}, "user_name": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "example": "so1n", "type": "string"}, "age": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "example": 25, "type": "integer"}, "sex": {"description": "sex", "allOf": [{"$ref": "#/components/schemas/SexEnum"}]}}, "required": ["uid", "user_name", "age", "sex"]}}}}, "parameters": [{"name": "Content-Type", "in": "header", "required": true, "description": "Content-Type", "schema": {"title": "Content-Type", "description": "Content-Type", "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "headers": {}, "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/example__param_verify__model__UserSuccessRespModel__ResponseModel"}, {"$ref": "#/components/schemas/example__param_verify__model__ResponseFailModel"}]}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/cbv": {"post": {"tags": ["cbv"], "deprecated": false, "summary": "", "description": "test cbv post method", "operationId": "post.test_cbv.post", "pai_info": {"group": "user", "status": "release", "author": ["so1n"], "md5": "094d843f789cdd304111abf7b118a2f4"}, "requestBody": {"content": {"application/json": {"schema": {"title": "TestCbv.postDynamicModel", "type": "object", "properties": {"age": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "example": 25, "type": "integer"}, "uid": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}, "user_name": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}, "sex": {"description": "sex", "allOf": [{"$ref": "#/components/schemas/example__param_verify__model__SexEnum"}]}}, "required": ["age", "uid", "user_name", "sex"]}}}}, "parameters": [{"name": "Content-Type", "in": "header", "required": true, "description": "", "schema": {"title": "Content-Type", "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "headers": {}, "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/example__param_verify__model__UserSuccessRespModel__ResponseModel"}, {"$ref": "#/components/schemas/example__param_verify__model__ResponseFailModel"}]}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}, "get": {"tags": ["cbv"], "deprecated": false, "summary": "", "description": "Text cbv route get", "operationId": "get.test_cbv.get", "pai_info": {"group": "user", "status": "release", "author": ["so1n"], "md5": "094d843f789cdd304111abf7b118a2f4"}, "parameters": [{"name": "Content-Type", "in": "header", "required": true, "description": "", "schema": {"title": "Content-Type", "type": "string"}}, {"name": "age", "in": "query", "required": true, "description": "age", "schema": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "example": 25, "type": "integer"}}, {"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "sex", "in": "query", "required": false, "description": "sex", "schema": {"title": "SexEnum", "description": "An enumeration.", "enum": ["man", "woman"], "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "headers": {}, "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/example__param_verify__model__UserSuccessRespModel__ResponseModel"}, {"$ref": "#/components/schemas/example__param_verify__model__ResponseFailModel"}]}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/pait-base-field/{age}": {"post": {"tags": ["field"], "deprecated": false, "summary": "", "description": "Test the use of all BaseField-based", "operationId": "POST.pait_base_field_route", "pai_info": {"group": "user", "status": "release", "author": ["so1n"], "md5": "ea2e6914b2bda7c1227069ed533c33e3"}, "parameters": [{"name": "cookie", "in": "cookie", "required": true, "description": "cookie \n>Note for Swagger UI and Swagger Editor users:  \n>Cookie authentication iscurrently not supported for \"try it out\" requests due to browser securityrestrictions. See [this issue](https://github.com/swagger-api/swagger-js/issues/1163)for more information. [SwaggerHub](https://swagger.io/tools/swaggerhub/)does not have this limitation. ", "schema": {"title": "Cookie", "description": "cookie", "type": "string"}}, {"name": "multi_user_name", "in": "multiquery", "required": true, "description": "user name", "schema": {"title": "Multi User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "array", "items": {"type": "string", "minLength": 2, "maxLength": 4}}}, {"name": "age", "in": "path", "required": true, "description": "age", "schema": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, {"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "email", "in": "query", "required": false, "description": "user email", "schema": {"title": "Email", "description": "user email", "default": "example@xxx.com", "type": "string"}}, {"name": "sex", "in": "query", "required": false, "description": "sex", "schema": {"title": "SexEnum", "description": "An enumeration.", "enum": ["man", "woman"], "type": "string"}}], "requestBody": {"content": {"multipart/form-data": {"schema": {"type": "object", "properties": {"upload_file": {"title": "Upload_file", "type": "string", "format": "binary"}}, "required": ["upload_file"]}}, "application/x-www-form-urlencoded": {"schema": {"title": "PaitBaseFieldRouteDynamicModel", "type": "object", "properties": {"a": {"title": "A", "description": "form data", "type": "string"}, "b": {"title": "B", "description": "form data", "type": "string"}, "c": {"title": "C", "description": "form data  \n>Swagger UI could not support, when media_type is multipart/form-data", "type": "array", "items": {"type": "string"}}}, "required": ["a", "b", "c"]}, "encoding": {"c": {"style": "form", "explode": true}}}}, "required": true}, "responses": {"200": {"description": "success response|fail response", "headers": {}, "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/example__param_verify__model__SimpleRespModel__ResponseModel"}, {"$ref": "#/components/schemas/example__param_verify__model__ResponseFailModel"}]}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/mock/{age}": {"get": {"tags": ["mock"], "deprecated": false, "summary": "", "description": "Test gen mock response", "operationId": "GET.mock_route", "pai_info": {"group": "user", "status": "release", "author": ["so1n"], "md5": "a59c1e0d9f5c8055d9d062dd436b2c16"}, "parameters": [{"name": "multi_user_name", "in": "multiquery", "required": true, "description": "user name", "schema": {"title": "Multi User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "array", "items": {"type": "string", "minLength": 2, "maxLength": 4}}}, {"name": "age", "in": "path", "required": true, "description": "age", "schema": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, {"name": "uid", "in": "query", "required": true, "description": "user id", "schema": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}}, {"name": "user_name", "in": "query", "required": true, "description": "user name", "schema": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}}, {"name": "email", "in": "query", "required": false, "description": "user email", "schema": {"title": "Email", "description": "user email", "default": "example@xxx.com", "type": "string"}}, {"name": "sex", "in": "query", "required": false, "description": "sex", "schema": {"title": "SexEnum", "description": "An enumeration.", "enum": ["man", "woman"], "type": "string"}}], "responses": {"200": {"description": "success response|fail response", "headers": {}, "content": {"application/json": {"schema": {"oneOf": [{"$ref": "#/components/schemas/example__param_verify__model__UserSuccessRespModel2__ResponseModel"}, {"$ref": "#/components/schemas/example__param_verify__model__ResponseFailModel"}]}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/text-resp": {"get": {"tags": ["check resp"], "deprecated": false, "summary": "", "description": "test return test response", "operationId": "GET.text_response_route", "pai_info": {"group": "check_resp", "status": "undefined", "author": ["so1n"], "md5": "8b93c92b1b0ad2b6a600bbb2a1adce04"}, "responses": {"200": {"description": "text response", "headers": {"X-Example-Type": "text"}, "content": {"text/plain": {"type": "string", "example": "pait example data"}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/html-resp": {"get": {"tags": ["check resp"], "deprecated": false, "summary": "", "description": "test return html response", "operationId": "GET.html_response_route", "pai_info": {"group": "check_resp", "status": "undefined", "author": ["so1n"], "md5": "46d5bfce1ca45fa2d0cf2e5854e8ba8f"}, "responses": {"200": {"description": "html response", "headers": {"X-Example-Type": "html"}, "content": {"text/html": {"type": "string", "example": "<h1>Pait example html</h1>"}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/file-resp": {"get": {"tags": ["check resp"], "deprecated": false, "summary": "", "description": "test return file response", "operationId": "GET.file_response_route", "pai_info": {"group": "check_resp", "status": "undefined", "author": ["so1n"], "md5": "d6f538adaa548f1fa46b98b7cf76ac57"}, "responses": {"200": {"description": "file response", "headers": {"X-Example-Type": "file"}, "content": {"application/octet-stream": {"type": "string", "format": "binary"}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/login": {"post": {"tags": ["links"], "deprecated": false, "summary": "", "description": "", "operationId": "POST.login_route", "pai_info": {"group": "links", "status": "undefined", "author": ["so1n"], "md5": "19da3667e1501f67ffc3177a03d6dbff"}, "requestBody": {"content": {"application/json": {"schema": {"title": "LoginRouteDynamicModel", "type": "object", "properties": {"uid": {"title": "Uid", "description": "user id", "type": "string"}, "password": {"title": "Password", "description": "password", "type": "string"}}, "required": ["uid", "password"]}}}}, "responses": {"200": {"description": "login response", "headers": {}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/example__param_verify__model__LoginRespModel__ResponseModel"}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}, "/api/user": {"get": {"tags": ["links"], "deprecated": false, "summary": "", "description": "", "operationId": "GET.get_user_route", "pai_info": {"group": "links", "status": "undefined", "author": ["so1n"], "md5": "8d3ad72fb9b2505efaaf047fc1539e93"}, "parameters": [{"name": "token", "in": "header", "required": false, "description": "token", "schema": {"title": "Token", "description": "token", "default": "", "example": null, "type": "string"}}], "responses": {"200": {"description": "success response", "headers": {}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/example__param_verify__model__ResponseModel"}}}, "links": {"GET.get_user_route/header/token": {"description": "test links model", "operationId": "GET.get_user_route", "parameters": {"token": "$response.body#/data/token"}}}}}}}}, "components": {"schemas": {"DataModel": {"title": "DataModel", "type": "object", "properties": {"uid": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}, "user_name": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}, "age": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}, "email": {"title": "Email", "description": "user email", "type": "string"}}, "required": ["uid", "user_name", "age", "email"]}, "ResponseModel": {"title": "ResponseModel", "type": "object", "properties": {"code": {"title": "Code", "description": "api code", "default": 0, "type": "integer"}, "msg": {"title": "Msg", "description": "api status msg", "default": "success", "type": "string"}, "data": {"$ref": "#/components/schemas/DataModel"}}, "required": ["data"]}, "example__param_verify__model__UserSuccessRespModel3__ResponseModel__DataModel": {"title": "DataModel", "type": "object", "properties": {"uid": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}, "user_name": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}, "age": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}, "email": {"title": "Email", "description": "user email", "type": "string"}}, "required": ["uid", "user_name", "age", "email"]}, "example__param_verify__model__UserSuccessRespModel3__ResponseModel": {"title": "ResponseModel", "type": "object", "properties": {"code": {"title": "Code", "description": "api code", "default": 0, "type": "integer"}, "msg": {"title": "Msg", "description": "api status msg", "default": "success", "type": "string"}, "data": {"$ref": "#/components/schemas/example__param_verify__model__UserSuccessRespModel3__ResponseModel__DataModel"}}, "required": ["data"]}, "example__param_verify__model__ResponseModel": {"title": "ResponseModel", "type": "object", "properties": {"code": {"title": "Code", "description": "api code", "default": 0, "type": "integer"}, "msg": {"title": "Msg", "description": "api status msg", "default": "success", "type": "string"}}}, "ResponseFailModel": {"title": "ResponseFailModel", "type": "object", "properties": {"code": {"title": "Code", "description": "api code", "default": 1, "type": "integer"}, "msg": {"title": "Msg", "description": "api status msg", "default": "fail", "type": "string"}}}, "example__param_verify__model__ResponseFailModel": {"title": "ResponseFailModel", "type": "object", "properties": {"code": {"title": "Code", "description": "api code", "default": 1, "type": "integer"}, "msg": {"title": "Msg", "description": "api status msg", "default": "fail", "type": "string"}}}, "example__param_verify__model__SimpleRespModel__ResponseModel": {"title": "ResponseModel", "type": "object", "properties": {"code": {"title": "Code", "description": "api code", "default": 0, "type": "integer"}, "msg": {"title": "Msg", "description": "api status msg", "default": "success", "type": "string"}, "data": {"title": "Data", "description": "success result", "type": "object"}}, "required": ["data"]}, "UserInfo": {"title": "UserInfo", "type": "object", "properties": {"user_name": {"title": "User Name", "description": "user name", "maxLength": 4, "minLength": 2, "type": "string"}, "age": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}}, "required": ["user_name", "age"]}, "SexEnum": {"title": "SexEnum", "description": "An enumeration.", "enum": ["man", "woman"], "type": "string"}, "example__param_verify__model__UserSuccessRespModel__ResponseModel__DataModel": {"title": "DataModel", "type": "object", "properties": {"uid": {"title": "Uid", "description": "user id", "default": 666, "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "type": "integer"}, "user_name": {"title": "User Name", "description": "user name", "default": "mock_name", "maxLength": 10, "minLength": 2, "type": "string"}, "age": {"title": "Age", "description": "age", "default": 99, "exclusiveMinimum": 1, "exclusiveMaximum": 100, "type": "integer"}, "sex": {"description": "sex", "default": "man", "allOf": [{"$ref": "#/components/schemas/example__param_verify__model__SexEnum"}]}, "content_type": {"title": "Content Type", "description": "content-type", "type": "string"}}, "required": ["content_type"]}, "example__param_verify__model__SexEnum": {"title": "SexEnum", "description": "An enumeration.", "enum": ["man", "woman"], "type": "string"}, "example__param_verify__model__UserSuccessRespModel__ResponseModel": {"title": "ResponseModel", "type": "object", "properties": {"code": {"title": "Code", "description": "api code", "default": 0, "type": "integer"}, "msg": {"title": "Msg", "description": "api status msg", "default": "success", "type": "string"}, "data": {"$ref": "#/components/schemas/example__param_verify__model__UserSuccessRespModel__ResponseModel__DataModel"}}, "required": ["data"]}, "example__param_verify__model__UserSuccessRespModel2__ResponseModel__DataModel": {"title": "DataModel", "type": "object", "properties": {"uid": {"title": "Uid", "description": "user id", "exclusiveMinimum": 10, "exclusiveMaximum": 1000, "example": 666, "type": "integer"}, "user_name": {"title": "User Name", "description": "user name", "maxLength": 10, "minLength": 2, "example": "mock_name", "type": "string"}, "multi_user_name": {"title": "Multi User Name", "description": "user name", "maxLength": 10, "minLength": 2, "example": ["mock_name"], "type": "array", "items": {"type": "string", "minLength": 2, "maxLength": 10}}, "sex": {"description": "sex", "example": "man", "allOf": [{"$ref": "#/components/schemas/example__param_verify__model__SexEnum"}]}, "age": {"title": "Age", "description": "age", "exclusiveMinimum": 1, "exclusiveMaximum": 100, "example": 99, "type": "integer"}, "email": {"title": "Email", "description": "user email", "example": "example@so1n.me", "type": "string"}}, "required": ["uid", "user_name", "multi_user_name", "sex", "age", "email"]}, "example__param_verify__model__UserSuccessRespModel2__ResponseModel": {"title": "ResponseModel", "type": "object", "properties": {"code": {"title": "Code", "description": "api code", "default": 0, "type": "integer"}, "msg": {"title": "Msg", "description": "api status msg", "default": "success", "type": "string"}, "data": {"$ref": "#/components/schemas/example__param_verify__model__UserSuccessRespModel2__ResponseModel__DataModel"}}, "required": ["data"]}, "example__param_verify__model__LoginRespModel__ResponseModel__DataModel": {"title": "DataModel", "type": "object", "properties": {"token": {"title": "Token", "type": "string"}}, "required": ["token"]}, "example__param_verify__model__LoginRespModel__ResponseModel": {"title": "ResponseModel", "type": "object", "properties": {"code": {"title": "Code", "description": "api code", "default": 0, "type": "integer"}, "msg": {"title": "Msg", "description": "api status msg", "default": "success", "type": "string"}, "data": {"$ref": "#/components/schemas/example__param_verify__model__LoginRespModel__ResponseModel__DataModel"}}, "required": ["data"]}}}}
