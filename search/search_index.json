{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4ecb\u7ecd Pait \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684Python Api\u5f00\u53d1\u5de5\u5177\uff0c\u62e5\u6709\u53c2\u6570\u7c7b\u578b\u68c0\u67e5, \u7c7b\u578b\u8f6c\u6362\u548c\u63d0\u4f9b\u6587\u6863\u8f93\u51fa\u7b49\u529f\u80fd\uff0c\u975e\u5e38\u9002\u5408\u7528\u4e8e\u540e\u7aef\u7684\u63a5\u53e3\u5f00\u53d1\uff0c \u5b83\u88ab\u8bbe\u8ba1\u517c\u5bb9\u591a\u4e2aPython\u90fdWeb\u5e94\u7528\u5f00\u53d1\u6846\u67b6(\u76ee\u524d\u9002\u914d\u4e86 Flask , Starlette , Sanic , Tornado )\uff0c\u4e14\u505a\u5230\u5c3d\u91cf\u5c11\u5730\u4fb5\u5165\u539f\u6709\u6846\u67b6\uff0c Pait \u8bbe\u8ba1\u7075\u611f\u89c1\u6587\u7ae0 \u300a\u7ed9python\u63a5\u53e3\u52a0\u4e0a\u4e00\u5c42\u7c7b\u578b\u68c0\u300b \u3002 NOTE: mypy check 100% test coverage 95%+ (\u6392\u9664api_doc) python version >= 3.7 (\u652f\u6301\u5ef6\u8fdf\u6ce8\u91ca) \u4ee5\u4e0b\u4ee3\u7801\u6ca1\u6709\u7279\u522b\u8bf4\u660e, \u90fd\u9ed8\u8ba4\u4ee5starlette\u6846\u67b6\u4e3a\u4f8b \u529f\u80fd \u53c2\u6570\u6821\u9a8c\u548c\u81ea\u52a8\u8f6c\u5316(\u53c2\u6570\u6821\u9a8c\u4f9d\u8d56\u4e8e Pydantic ) \u53c2\u6570\u5173\u7cfb\u4f9d\u8d56\u6821\u9a8c \u81ea\u52a8\u751f\u6210openapi\u6587\u4ef6 \u652f\u6301swagger,redoc\u8def\u7531 \u652f\u6301mock\u54cd\u5e94 TestClient\u652f\u6301, \u652f\u6301\u6d4b\u8bd5\u7528\u4f8b\u7684\u54cd\u5e94\u7ed3\u679c\u6821\u9a8c \u652f\u6301\u63d2\u4ef6\u62d3\u5c55 \u672c\u5730api\u6587\u6863\u7ba1\u7406 \u8981\u6c42 Python3.7+ \u5728\u9879\u76ee\u4e2d\u4f7f\u7528TypeHints \u5b89\u88c5 pip3 install pait \u793a\u4f8b Pait \u662f\u4e00\u4e2a\u8f85\u52a9\u6846\u67b6\uff0c \u5728\u4ecb\u7ecd Pait \u4f7f\u7528\u65b9\u6cd5\u4e4b\u524d\uff0c \u5148\u770b\u770b\u539f\u672c\u6846\u67b6\u7684\u5b9e\u73b0\u4ee3\u7801\uff0c\u8be5\u4ee3\u7801\u662f\u4e00\u4e2a\u666e\u901a\u7684 POST \u63a5\u53e3\uff0c \u8be5\u63a5\u53e3\u4f1a\u6821\u9a8c\u548c\u8f6c\u884c\u53c2\u6570\uff0c \u5e76\u8fd4\u56de\u7ed9\u8c03\u7528\u7aef\uff1a import uvicorn # type: ignore from starlette.applications import Starlette from starlette.requests import Request from starlette.responses import JSONResponse from starlette.routing import Route async def demo_post ( request : Request ) -> JSONResponse : body_dict : dict = await request . json () uid : int = body_dict . get ( 'uid' , 0 ) user_name : str = body_dict . get ( 'user_name' , \"\" ) # \u4ee5\u4e0b\u4ee3\u7801\u53ea\u662f\u4f5c\u4e3a\u793a\u8303, \u4e00\u822c\u60c5\u51b5\u4e0b, \u6211\u4eec\u90fd\u4f1a\u505a\u4e00\u4e9b\u5c01\u88c5, \u4e0d\u4f1a\u663e\u5f97\u8fc7\u4e8e\u5197\u4f59 if not uid : raise ValueError ( 'xxx' ) if type ( uid ) != int : raise TypeError ( 'xxxx' ) if 10 <= uid <= 1000 : raise ValueError ( 'xxx' ) if not user_name : raise ValueError ( 'xxx' ) if type ( user_name ) != str : raise TypeError ( 'xxxx' ) if 2 <= len ( user_name ) <= 4 : raise ValueError ( 'xxx' ) return JSONResponse ( { 'result' : { 'uid' : body_dict [ 'uid' ], 'user_name' : body_dict [ 'user_name' ] } } ) app = Starlette ( routes = [ Route ( '/api' , demo_post , methods = [ 'POST' ]), ] ) uvicorn . run ( app ) \u53ef\u4ee5\u770b\u51fa\u8fd9\u79cd\u5199\u6cd5\u975e\u5e38\u9ebb\u70e6\uff0c \u800c\u5728\u4f7f\u7528\u4e86 Pait \u540e\uff0c \u4ee3\u7801\u53ef\u4ee5\u53d8\u5f97\u6bd4\u8f83\u7cbe\u70bc\uff0c \u5176\u4e2d\u9ad8\u4eae\u90e8\u5206\u5219\u4e0e Pait \u76f8\u5173\uff1a import uvicorn # type: ignore from starlette.applications import Starlette from starlette.responses import JSONResponse from starlette.routing import Route from pait.app.starlette import pait from pait.field import Body # \u4f7f\u7528pait\u88c5\u9970\u5668\u88c5\u9970\u51fd\u6570 @pait () async def demo_post ( uid : int = Body . i ( description = \"user id\" , gt = 10 , lt = 1000 ), user_name : str = Body . i ( description = \"user name\" , min_length = 2 , max_length = 4 ) ) -> JSONResponse : # \u83b7\u53d6\u5bf9\u5e94\u7684\u503c\u8fdb\u884c\u8fd4\u56de return JSONResponse ({ 'result' : { 'uid' : uid , 'user_name' : user_name }}) app = Starlette ( routes = [ Route ( '/api' , demo_post , methods = [ 'POST' ]), ] ) uvicorn . run ( app ) \u6027\u80fd Pait \u57fa\u4e8e Python \u81ea\u5e26\u7684 inspect \u5b9e\u73b0\u51fd\u6570\u7b7e\u540d\u63d0\u53d6\uff0c \u57fa\u4e8e Pydantic \u5b9e\u73b0\u53c2\u6570\u6821\u9a8c\u548c\u7c7b\u578b\u8f6c\u6362\uff0c\u6240\u4ee5 Pait \u7684\u6027\u80fd\u8868\u73b0\u5341\u5206\u4f18\u8d8a\u3002\u4e0d\u8fc7\u76ee\u524d\u7684 Pait \u8fd8\u5728\u6210\u957f\u4e2d\uff0c \u8fd8\u6709\u8bb8\u591a\u9700\u8981\u4f18\u5316\u7684\u5730\u65b9\u3002 \u793a\u4f8b Pait \u9488\u5bf9\u6bcf\u4e00\u4e2a\u652f\u6301\u7684Web\u6846\u67b6\u90fd\u6709\u5b8c\u5584\u7684\u4ee3\u7801\u793a\u4f8b\uff0c \u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u793a\u4f8b\u4ee3\u7801\u4e86\u89e3\u6700\u4f73\u5b9e\u8df5: flask example sanic example starlette example tornado example","title":"\u53d1\u884c\u8bf4\u660e"},{"location":"#_1","text":"Pait \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684Python Api\u5f00\u53d1\u5de5\u5177\uff0c\u62e5\u6709\u53c2\u6570\u7c7b\u578b\u68c0\u67e5, \u7c7b\u578b\u8f6c\u6362\u548c\u63d0\u4f9b\u6587\u6863\u8f93\u51fa\u7b49\u529f\u80fd\uff0c\u975e\u5e38\u9002\u5408\u7528\u4e8e\u540e\u7aef\u7684\u63a5\u53e3\u5f00\u53d1\uff0c \u5b83\u88ab\u8bbe\u8ba1\u517c\u5bb9\u591a\u4e2aPython\u90fdWeb\u5e94\u7528\u5f00\u53d1\u6846\u67b6(\u76ee\u524d\u9002\u914d\u4e86 Flask , Starlette , Sanic , Tornado )\uff0c\u4e14\u505a\u5230\u5c3d\u91cf\u5c11\u5730\u4fb5\u5165\u539f\u6709\u6846\u67b6\uff0c Pait \u8bbe\u8ba1\u7075\u611f\u89c1\u6587\u7ae0 \u300a\u7ed9python\u63a5\u53e3\u52a0\u4e0a\u4e00\u5c42\u7c7b\u578b\u68c0\u300b \u3002 NOTE: mypy check 100% test coverage 95%+ (\u6392\u9664api_doc) python version >= 3.7 (\u652f\u6301\u5ef6\u8fdf\u6ce8\u91ca) \u4ee5\u4e0b\u4ee3\u7801\u6ca1\u6709\u7279\u522b\u8bf4\u660e, \u90fd\u9ed8\u8ba4\u4ee5starlette\u6846\u67b6\u4e3a\u4f8b","title":"\u4ecb\u7ecd"},{"location":"#_2","text":"\u53c2\u6570\u6821\u9a8c\u548c\u81ea\u52a8\u8f6c\u5316(\u53c2\u6570\u6821\u9a8c\u4f9d\u8d56\u4e8e Pydantic ) \u53c2\u6570\u5173\u7cfb\u4f9d\u8d56\u6821\u9a8c \u81ea\u52a8\u751f\u6210openapi\u6587\u4ef6 \u652f\u6301swagger,redoc\u8def\u7531 \u652f\u6301mock\u54cd\u5e94 TestClient\u652f\u6301, \u652f\u6301\u6d4b\u8bd5\u7528\u4f8b\u7684\u54cd\u5e94\u7ed3\u679c\u6821\u9a8c \u652f\u6301\u63d2\u4ef6\u62d3\u5c55 \u672c\u5730api\u6587\u6863\u7ba1\u7406","title":"\u529f\u80fd"},{"location":"#_3","text":"Python3.7+ \u5728\u9879\u76ee\u4e2d\u4f7f\u7528TypeHints","title":"\u8981\u6c42"},{"location":"#_4","text":"pip3 install pait","title":"\u5b89\u88c5"},{"location":"#_5","text":"Pait \u662f\u4e00\u4e2a\u8f85\u52a9\u6846\u67b6\uff0c \u5728\u4ecb\u7ecd Pait \u4f7f\u7528\u65b9\u6cd5\u4e4b\u524d\uff0c \u5148\u770b\u770b\u539f\u672c\u6846\u67b6\u7684\u5b9e\u73b0\u4ee3\u7801\uff0c\u8be5\u4ee3\u7801\u662f\u4e00\u4e2a\u666e\u901a\u7684 POST \u63a5\u53e3\uff0c \u8be5\u63a5\u53e3\u4f1a\u6821\u9a8c\u548c\u8f6c\u884c\u53c2\u6570\uff0c \u5e76\u8fd4\u56de\u7ed9\u8c03\u7528\u7aef\uff1a import uvicorn # type: ignore from starlette.applications import Starlette from starlette.requests import Request from starlette.responses import JSONResponse from starlette.routing import Route async def demo_post ( request : Request ) -> JSONResponse : body_dict : dict = await request . json () uid : int = body_dict . get ( 'uid' , 0 ) user_name : str = body_dict . get ( 'user_name' , \"\" ) # \u4ee5\u4e0b\u4ee3\u7801\u53ea\u662f\u4f5c\u4e3a\u793a\u8303, \u4e00\u822c\u60c5\u51b5\u4e0b, \u6211\u4eec\u90fd\u4f1a\u505a\u4e00\u4e9b\u5c01\u88c5, \u4e0d\u4f1a\u663e\u5f97\u8fc7\u4e8e\u5197\u4f59 if not uid : raise ValueError ( 'xxx' ) if type ( uid ) != int : raise TypeError ( 'xxxx' ) if 10 <= uid <= 1000 : raise ValueError ( 'xxx' ) if not user_name : raise ValueError ( 'xxx' ) if type ( user_name ) != str : raise TypeError ( 'xxxx' ) if 2 <= len ( user_name ) <= 4 : raise ValueError ( 'xxx' ) return JSONResponse ( { 'result' : { 'uid' : body_dict [ 'uid' ], 'user_name' : body_dict [ 'user_name' ] } } ) app = Starlette ( routes = [ Route ( '/api' , demo_post , methods = [ 'POST' ]), ] ) uvicorn . run ( app ) \u53ef\u4ee5\u770b\u51fa\u8fd9\u79cd\u5199\u6cd5\u975e\u5e38\u9ebb\u70e6\uff0c \u800c\u5728\u4f7f\u7528\u4e86 Pait \u540e\uff0c \u4ee3\u7801\u53ef\u4ee5\u53d8\u5f97\u6bd4\u8f83\u7cbe\u70bc\uff0c \u5176\u4e2d\u9ad8\u4eae\u90e8\u5206\u5219\u4e0e Pait \u76f8\u5173\uff1a import uvicorn # type: ignore from starlette.applications import Starlette from starlette.responses import JSONResponse from starlette.routing import Route from pait.app.starlette import pait from pait.field import Body # \u4f7f\u7528pait\u88c5\u9970\u5668\u88c5\u9970\u51fd\u6570 @pait () async def demo_post ( uid : int = Body . i ( description = \"user id\" , gt = 10 , lt = 1000 ), user_name : str = Body . i ( description = \"user name\" , min_length = 2 , max_length = 4 ) ) -> JSONResponse : # \u83b7\u53d6\u5bf9\u5e94\u7684\u503c\u8fdb\u884c\u8fd4\u56de return JSONResponse ({ 'result' : { 'uid' : uid , 'user_name' : user_name }}) app = Starlette ( routes = [ Route ( '/api' , demo_post , methods = [ 'POST' ]), ] ) uvicorn . run ( app )","title":"\u793a\u4f8b"},{"location":"#_6","text":"Pait \u57fa\u4e8e Python \u81ea\u5e26\u7684 inspect \u5b9e\u73b0\u51fd\u6570\u7b7e\u540d\u63d0\u53d6\uff0c \u57fa\u4e8e Pydantic \u5b9e\u73b0\u53c2\u6570\u6821\u9a8c\u548c\u7c7b\u578b\u8f6c\u6362\uff0c\u6240\u4ee5 Pait \u7684\u6027\u80fd\u8868\u73b0\u5341\u5206\u4f18\u8d8a\u3002\u4e0d\u8fc7\u76ee\u524d\u7684 Pait \u8fd8\u5728\u6210\u957f\u4e2d\uff0c \u8fd8\u6709\u8bb8\u591a\u9700\u8981\u4f18\u5316\u7684\u5730\u65b9\u3002","title":"\u6027\u80fd"},{"location":"#_7","text":"Pait \u9488\u5bf9\u6bcf\u4e00\u4e2a\u652f\u6301\u7684Web\u6846\u67b6\u90fd\u6709\u5b8c\u5584\u7684\u4ee3\u7801\u793a\u4f8b\uff0c \u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u793a\u4f8b\u4ee3\u7801\u4e86\u89e3\u6700\u4f73\u5b9e\u8df5: flask example sanic example starlette example tornado example","title":"\u793a\u4f8b"}]}